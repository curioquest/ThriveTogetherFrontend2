{"ast":null,"code":"import _regeneratorRuntime from\"/Users/amandagifford/SoftwareEngineering/ThriveTogetherFrontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/amandagifford/SoftwareEngineering/ThriveTogetherFrontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/amandagifford/SoftwareEngineering/ThriveTogetherFrontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState,useCallback}from'react';import{connect}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InboxForm(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),userData=_useState4[0],setUserData=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),updatedConversation=_useState6[0],setUpdatedConversation=_useState6[1];var recipient=props.recipient;useEffect(function(){function getUserData(){return _getUserData.apply(this,arguments);}function _getUserData(){_getUserData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var url,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"\".concat(process.env.REACT_APP_API_HOST,\"/token\");_context.next=3;return fetch(url,{credentials:\"include\"});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;if(response.ok){setUserData(data.account);}else{console.log(\"Your data could not be fetched\");}case 8:case\"end\":return _context.stop();}}},_callee);}));return _getUserData.apply(this,arguments);}getUserData();},[]);var fetchInitialConversation=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var messagesUrl,fetchConfig,response,data,truncData;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;messagesUrl=\"\".concat(process.env.REACT_APP_API_HOST,\"/api/messages/\").concat(userData[\"id\"],\"/message/\").concat(recipient.recipient);// Assuming 2 is the recipient ID\nfetchConfig={credentials:'include',method:\"GET\",headers:{'Content-Type':'application/json'}};_context2.next=5;return fetch(messagesUrl,fetchConfig);case 5:response=_context2.sent;_context2.next=8;return response.json();case 8:data=_context2.sent;if(response.ok){if(data.length>10){truncData=data.slice(0,10);setUpdatedConversation(truncData);}else{setUpdatedConversation(data);}}else{console.log(\"Could not retrieve initial conversation.\");}_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](0);console.error('Error fetching initial conversation data:',_context2.t0);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,12]]);})),[userData,recipient.recipient]);useEffect(function(){if(userData.id){fetchInitialConversation();}},[userData.id,recipient,fetchInitialConversation]);var handleNewMessage=function handleNewMessage(event){var value=event.target.value;setMessage(value);};var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(event){var data,createMessageUrl,fetchConfig,response,messagesUrl,fetchConfig2,response2,info2,truncData;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:event.preventDefault();data={};data.content=message;data.sender=userData.id;data.recipient=props.recipient.recipient;createMessageUrl=\"\".concat(process.env.REACT_APP_API_HOST,\"/api/messages/create\");fetchConfig={credentials:\"include\",method:\"post\",body:JSON.stringify(data),headers:{'Content-Type':'application/json'}};_context3.prev=7;_context3.next=10;return fetch(createMessageUrl,fetchConfig);case 10:response=_context3.sent;if(!response.ok){_context3.next=24;break;}messagesUrl=\"\".concat(process.env.REACT_APP_API_HOST,\"/api/messages/\").concat(data.sender,\"/message/\").concat(data.recipient);fetchConfig2={credentials:\"include\",method:\"get\",headers:{'Content-Type':'application/json'}};_context3.next=16;return fetch(messagesUrl,fetchConfig2);case 16:response2=_context3.sent;_context3.next=19;return response2.json();case 19:info2=_context3.sent;if(response2.ok){if(info2.length>10){truncData=info2.slice(0,10);setUpdatedConversation(truncData);}else{setUpdatedConversation(info2);}}else{console.log(\"Could not retrieve updated conversation.\");}setMessage(\"\");_context3.next=25;break;case 24:console.log(\"could not create message\");case 25:_context3.next=30;break;case 27:_context3.prev=27;_context3.t0=_context3[\"catch\"](7);console.error(\"Error handling the form submission:\",_context3.t0);case 30:case\"end\":return _context3.stop();}}},_callee3,null,[[7,27]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"my-5 container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card shadow mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"card-title\",children:\"Conversation\"}),Array.isArray(updatedConversation)&&updatedConversation.length>0?updatedConversation.slice().reverse().map(function(message){return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[message.sender===props.recipient.recipient?/*#__PURE__*/_jsx(\"strong\",{children:message.username}):/*#__PURE__*/_jsx(\"strong\",{children:\"Me\"}),\": \",message.content]},message.id);}):/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"})// You can also render an empty state here\n]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card shadow\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"card-title\",children:\"Inbox\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,id:\"create-model-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-floating mb-3\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:handleNewMessage,required:true,placeholder:\"NewMessage\",type:\"text\",id:\"new_message\",name:\"new_message\",value:message,className:\"form-control\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"new_message\",children:\"Message\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-lg btn-primary\",children:\"Send\"})]})]})})})})]});}var mapStateToProps=function mapStateToProps(state){return{recipient:state.recipient};};export default connect(mapStateToProps)(InboxForm);","map":{"version":3,"names":["React","useEffect","useState","useCallback","connect","InboxForm","props","message","setMessage","userData","setUserData","updatedConversation","setUpdatedConversation","recipient","getUserData","url","process","env","REACT_APP_API_HOST","fetch","credentials","response","json","data","ok","account","console","log","fetchInitialConversation","messagesUrl","fetchConfig","method","headers","length","truncData","slice","error","id","handleNewMessage","event","value","target","handleSubmit","preventDefault","content","sender","createMessageUrl","body","JSON","stringify","fetchConfig2","response2","info2","Array","isArray","reverse","map","username","mapStateToProps","state"],"sources":["/Users/amandagifford/SoftwareEngineering/ThriveTogetherFrontend/src/Messages/InboxForm.js"],"sourcesContent":["import React, {useEffect, useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nfunction InboxForm(props) {\n    const [message, setMessage] = useState(\"\");\n    const [userData, setUserData] = useState(\"\");\n    const [updatedConversation, setUpdatedConversation] = useState([]);\n    const { recipient } = props;\n\n    useEffect(() => {\n        async function getUserData() {\n            let url = `${process.env.REACT_APP_API_HOST}/token`;\n            let response = await fetch(url, {\n                credentials: \"include\",\n            });\n            let data = await response.json();\n\n            if (response.ok) {\n                setUserData(data.account);\n            } else {\n                console.log(\"Your data could not be fetched\");\n            }\n        }\n        getUserData();\n    }, []);\n\n    const fetchInitialConversation = useCallback( async () => {\n        try {\n\n            const messagesUrl = `${process.env.REACT_APP_API_HOST}/api/messages/${userData[\"id\"]}/message/${recipient.recipient}`; // Assuming 2 is the recipient ID\n            const fetchConfig = {\n            credentials: 'include',\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            };\n\n            const response = await fetch(messagesUrl, fetchConfig);\n            const data = await response.json();\n\n            if (response.ok) {\n                if (data.length > 10) {\n                    const truncData = data.slice(0,10);\n                    setUpdatedConversation(truncData);\n\n                } else {\n                    setUpdatedConversation(data);\n                }\n\n            } else {\n            console.log(\"Could not retrieve initial conversation.\");\n            }\n        } catch (error) {\n            console.error('Error fetching initial conversation data:', error);\n        }\n    }, [userData, recipient.recipient])\n\n\n    useEffect(() => {\n        if (userData.id) {\n            fetchInitialConversation();\n        }\n\n\n    }, [userData.id, recipient, fetchInitialConversation]);\n\n    const handleNewMessage = (event) => {\n        const value = event.target.value;\n        setMessage(value);\n    }\n\n\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const data = {};\n\n        data.content = message;\n        data.sender = userData.id;\n        data.recipient = props.recipient.recipient;\n        const createMessageUrl = `${process.env.REACT_APP_API_HOST}/api/messages/create`;\n        const fetchConfig = {\n            credentials: \"include\",\n            method: \"post\",\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        try {\n            const response = await fetch(createMessageUrl, fetchConfig);\n            // let info = await response.json();\n\n            if (response.ok) {\n                const messagesUrl = `${process.env.REACT_APP_API_HOST}/api/messages/${data.sender}/message/${data.recipient}`;\n                const fetchConfig2 = {\n                    credentials: \"include\",\n                    method: \"get\",\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n                const response2 = await fetch(messagesUrl, fetchConfig2);\n                let info2 = await response2.json();\n\n                if (response2.ok) {\n                    if (info2.length > 10) {\n                        const truncData = info2.slice(0,10);\n                        setUpdatedConversation(truncData);\n                    } else {\n                        setUpdatedConversation(info2);\n                    }\n                } else {\n                    console.log(\"Could not retrieve updated conversation.\");\n                }\n                setMessage(\"\");\n            } else {\n            console.log(\"could not create message\");\n        }\n    } catch (error) {\n        console.error(\"Error handling the form submission:\", error);\n    }\n    };\n\n\n\nreturn (\n    <div className=\"my-5 container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"card shadow mb-4\">\n            <div className=\"card-body\">\n              <h1 className=\"card-title\">Conversation</h1>\n              {Array.isArray(updatedConversation) && updatedConversation.length > 0 ? (\n                updatedConversation.slice().reverse().map((message) => (\n                  <div key={message.id} className=\"mb-3\">\n                    {message.sender === props.recipient.recipient ? (\n                      <strong>{ message.username }</strong>\n                    ) : (\n                      <strong>Me</strong>\n                    )}: {message.content}\n                  </div>\n                ))\n              ) : (\n                <div>Loading...</div> // You can also render an empty state here\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"card shadow\">\n            <div className=\"card-body\">\n              <h1 className=\"card-title\">Inbox</h1>\n              <form onSubmit={handleSubmit} id=\"create-model-form\">\n                <div className=\"form-floating mb-3\">\n                  <input onChange={handleNewMessage} required placeholder=\"NewMessage\" type=\"text\" id=\"new_message\" name=\"new_message\" value={message} className=\"form-control\" />\n                  <label htmlFor=\"new_message\">Message</label>\n                </div>\n                <button className=\"btn btn-lg btn-primary\">Send</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nconst mapStateToProps = (state) => ({\n  recipient: state.recipient,\n});\n\nexport default connect(mapStateToProps)(InboxForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}